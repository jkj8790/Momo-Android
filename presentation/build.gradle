apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion 26
  buildToolsVersion '27.0.1'
  defaultConfig {
    applicationId "com.sorrowbeaver.momo"
    minSdkVersion 19
    targetSdkVersion 26
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    multiDexEnabled true
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  packagingOptions {
    exclude 'META-INF/rxjava.properties'
  }

  if(project.hasProperty('devBuild')) {
    splits.abi.enable = false
    splits.density.enable = false
    aaptOptions.cruncherEnabled = false
  }

  flavorDimensions 'development'

  productFlavors {

    development {
      minSdkVersion 21
      dimension 'development'
      resConfigs "en", "xxxhdpi"
    }

  }

}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
  implementation "com.android.support:design:$supportLibraryVersion"
  implementation 'com.google.android.gms:play-services-maps:11.0.0'
  implementation 'io.reactivex.rxjava2:rxkotlin:2.0.3'
  implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
  implementation "org.jetbrains.anko:anko:$anko_version"

  implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
  implementation "com.squareup.retrofit2:adapter-rxjava:$retrofit_version"
  implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
  implementation 'com.squareup.okhttp3:okhttp:3.8.0'
  implementation 'com.squareup.moshi:moshi:1.5.0'

  implementation 'com.google.dagger:dagger:2.13'
  kapt 'com.google.dagger:dagger-compiler:2.13'

  implementation 'com.squareup.picasso:picasso:2.5.2'

  debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
  releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
  testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'

  testImplementation 'junit:junit:4.12'
  testImplementation "com.nhaarman:mockito-kotlin-kt1.1:1.5.0"
  testImplementation "com.natpryce:hamkrest:1.4.0.0"

  androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })

  api project(path: ':domain')
  api project(path: ':data')
}


task createTestResources << {
  def mockMakerFile = new File("$projectDir/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker")
  if (System.env.MOCK_MAKER != null) {
    logger.info("Using MockMaker ${System.env.MOCK_MAKER}")
    mockMakerFile.parentFile.mkdirs()
    mockMakerFile.createNewFile()
    mockMakerFile.write(System.env.MOCK_MAKER)
  } else {
    logger.info("Using default MockMaker")
  }
}
